{"ast":null,"code":"import { apiToken, apiURL, groupId } from \"./constants\";\nexport class Api {\n  constructor(apiToken, groupId, apiURL) {\n    this._url = apiURL;\n    this._groupId = groupId;\n    this._headers = {\n      authorization: apiToken,\n      \"Content-Type\": \"application/json\"\n    };\n  }\n  _getResponse(res) {\n    if (res.ok) return res.json();\n    return Promise.reject(`ERROR: ${res.status}`);\n  }\n  getAppInfo() {\n    return Promise.all([this.getCard(), this.getUser()]);\n  }\n  getCard() {\n    return fetch(`${this._url}${this._groupId}/cards`, {\n      headers: this._headers\n    }).then(res => this._getResponse(res));\n  }\n  getUser() {\n    console.log(\"@\");\n    return fetch(`${this._url}${this._groupId}/users/me`, {\n      headers: this._headers\n    }).then(res => this._getResponse(res));\n  }\n  createCard({\n    name,\n    link\n  }) {\n    return fetch(`${this._url}${this._groupId}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._getResponse);\n  }\n  updateUser({\n    name,\n    about\n  }) {\n    return fetch(`${this._url}${this._groupId}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._getResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}${this._groupId}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getResponse);\n  }\n  likeCard(card) {\n    return fetch(`${this._url}${this._groupId}/cards/${card}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._getResponse);\n  }\n  removeCardLike(card) {\n    return fetch(`${this._url}${this._groupId}/cards/${card}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getResponse);\n  }\n  updateUserAvatar({\n    avatar\n  }) {\n    return fetch(`${this._url}${this._groupId}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._getResponse);\n  }\n}\nconst api = new Api(apiToken, groupId, apiURL);\nexport default api;","map":{"version":3,"names":["apiToken","apiURL","groupId","Api","constructor","_url","_groupId","_headers","authorization","_getResponse","res","ok","json","Promise","reject","status","getAppInfo","all","getCard","getUser","fetch","headers","then","console","log","createCard","name","link","method","body","JSON","stringify","updateUser","about","deleteCard","cardId","likeCard","card","removeCardLike","updateUserAvatar","avatar","api"],"sources":["/home/tryzo/app/yandexxx/mesto-react/src/utils/Api.js"],"sourcesContent":["import {apiToken, apiURL, groupId} from \"./constants\"\n\nexport class Api {\n  constructor (apiToken, groupId, apiURL) {\n    this._url = apiURL\n    this._groupId = groupId\n    this._headers = {\n      authorization: apiToken,\n      \"Content-Type\": \"application/json\"\n    }\n  }\n\n  _getResponse (res) {\n    if ( res.ok ) return res.json()\n    return Promise.reject(`ERROR: ${ res.status }`)\n  }\n\n  getAppInfo () {\n    return Promise.all([ this.getCard(), this.getUser() ])\n  }\n\n  getCard () {\n    return fetch(`${ this._url }${ this._groupId }/cards`, {\n      headers: this._headers\n    }).then(res => this._getResponse(res))\n  }\n\n  getUser () {\n    console.log(\"@\")\n    return fetch(`${ this._url }${ this._groupId }/users/me`, {\n      headers: this._headers\n    }).then(res => this._getResponse(res))\n  }\n\n  createCard ({ name, link }) {\n    return fetch(`${ this._url }${ this._groupId }/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._getResponse)\n  }\n\n  updateUser ({ name, about }) {\n    return fetch(`${ this._url }${ this._groupId }/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._getResponse)\n  }\n\n  deleteCard (cardId) {\n    return fetch(`${ this._url }${ this._groupId }/cards/${ cardId }`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getResponse)\n  }\n\n  likeCard (card) {\n    return fetch(`${ this._url }${ this._groupId }/cards/${ card }/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._getResponse)\n  }\n\n  removeCardLike (card) {\n    return fetch(`${ this._url }${ this._groupId }/cards/${ card }/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getResponse)\n  }\n\n  updateUserAvatar ({ avatar }) {\n    return fetch(`${ this._url }${ this._groupId }/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._getResponse)\n  }\n}\n\nconst api = new Api(apiToken, groupId, apiURL)\n\nexport default api\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}