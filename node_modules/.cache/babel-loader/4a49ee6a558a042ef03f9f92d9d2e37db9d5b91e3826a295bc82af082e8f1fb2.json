{"ast":null,"code":"/*\nimport {apiToken, apiURL, groupId} from \"./constants\"\n\nexport class Api {\n  constructor (apiToken, groupId, apiURL) {\n    this._url = apiURL\n    this._groupId = groupId\n    this._headers = {\n      authorization: apiToken,\n      \"Content-Type\": \"application/json\"\n    }\n  }\n\n  _getResponse (res) {\n    if ( res.ok ) return res.json()\n    return Promise.reject(`ERROR: ${ res.status }`)\n  }\n\n  getAppInfo () {\n    return Promise.all([ this.getCard(), this.getUser() ])\n  }\n\n  getCard () {\n    return fetch(`${ this._url }${ this._groupId }/cards`, {\n      headers: this._headers\n    }).then(res => this._getResponse(res))\n  }\n\n  getUser () {\n    return fetch(`${ this._url }${ this._groupId }/users/me`, {\n      headers: this._headers\n    }).then(res => this._getResponse(res))\n  }\n\n  createCard ({ name, link }) {\n    return fetch(`${ this._url }${ this._groupId }/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._getResponse)\n  }\n\n  updateUser ({ name, about }) {\n    return fetch(`${ this._url }${ this._groupId }/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._getResponse)\n  }\n\n  deleteCard (cardId) {\n    return fetch(`${ this._url }${ this._groupId }/cards/${ cardId }`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getResponse)\n  }\n\n  likeCard (card) {\n    return fetch(`${ this._url }${ this._groupId }/cards/${ card }/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._getResponse)\n  }\n\n  removeCardLike (card) {\n    return fetch(`${ this._url }${ this._groupId }/cards/${ card }/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getResponse)\n  }\n\n  updateUserAvatar ({ avatar }) {\n    return fetch(`${ this._url }${ this._groupId }/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._getResponse)\n  }\n}\n\nconst api = new Api(apiToken, apiURL, groupId)\n\nexport default api\n*/","map":{"version":3,"names":[],"sources":["/home/tryzo/app/yandexxx/mesto-react/src/utils/Api.js"],"sourcesContent":["/*\nimport {apiToken, apiURL, groupId} from \"./constants\"\n\nexport class Api {\n  constructor (apiToken, groupId, apiURL) {\n    this._url = apiURL\n    this._groupId = groupId\n    this._headers = {\n      authorization: apiToken,\n      \"Content-Type\": \"application/json\"\n    }\n  }\n\n  _getResponse (res) {\n    if ( res.ok ) return res.json()\n    return Promise.reject(`ERROR: ${ res.status }`)\n  }\n\n  getAppInfo () {\n    return Promise.all([ this.getCard(), this.getUser() ])\n  }\n\n  getCard () {\n    return fetch(`${ this._url }${ this._groupId }/cards`, {\n      headers: this._headers\n    }).then(res => this._getResponse(res))\n  }\n\n  getUser () {\n    return fetch(`${ this._url }${ this._groupId }/users/me`, {\n      headers: this._headers\n    }).then(res => this._getResponse(res))\n  }\n\n  createCard ({ name, link }) {\n    return fetch(`${ this._url }${ this._groupId }/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._getResponse)\n  }\n\n  updateUser ({ name, about }) {\n    return fetch(`${ this._url }${ this._groupId }/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._getResponse)\n  }\n\n  deleteCard (cardId) {\n    return fetch(`${ this._url }${ this._groupId }/cards/${ cardId }`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getResponse)\n  }\n\n  likeCard (card) {\n    return fetch(`${ this._url }${ this._groupId }/cards/${ card }/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._getResponse)\n  }\n\n  removeCardLike (card) {\n    return fetch(`${ this._url }${ this._groupId }/cards/${ card }/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getResponse)\n  }\n\n  updateUserAvatar ({ avatar }) {\n    return fetch(`${ this._url }${ this._groupId }/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._getResponse)\n  }\n}\n\nconst api = new Api(apiToken, apiURL, groupId)\n\nexport default api\n*/\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}