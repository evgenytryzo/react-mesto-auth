{"ast":null,"code":"const BASE_URL = 'https://auth.nomoreparties.co';\nconst Auth = (password, email, endpointRegister) => {\n  const BASE_URL = 'https://auth.nomoreparties.co';\n  return fetch(`${BASE_URL}${endpointRegister}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(checkResponse);\n};\n_c = Auth;\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return res.json().then(err => Promise.reject({\n    ...err,\n    status: res.status\n  }));\n}\nconst checkValidityToken = () => {\n  return fetch(`${BASE_URL}${endpointRegister}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(checkResponse);\n};\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["BASE_URL","Auth","password","email","endpointRegister","fetch","method","headers","body","JSON","stringify","then","checkResponse","_c","res","ok","json","err","Promise","reject","status","checkValidityToken","$RefreshReg$"],"sources":["/home/tryzo/app/yandexxx/mesto-react/src/components/Auth.js"],"sourcesContent":["\tconst BASE_URL = 'https://auth.nomoreparties.co'\n\tconst Auth = (password, email, endpointRegister) => {\n\t\n\tconst BASE_URL = 'https://auth.nomoreparties.co'\n\treturn fetch(`${BASE_URL}${endpointRegister}`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({ password, email }),\n\t}).then(checkResponse)\n}\n\nfunction checkResponse(res) {\n\tif (res.ok) {\n\t\treturn res.json()\n\t}\n\treturn res.json().then(err => Promise.reject({ ...err, status: res.status }))\n}\n\nconst checkValidityToken = () => {\n\t\treturn fetch(`${BASE_URL}${endpointRegister}`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({ password, email }),\n\t\t}).then(checkResponse)\n}\n\nexport default Auth\n"],"mappings":"AAAC,MAAMA,QAAQ,GAAG,+BAA+B;AAChD,MAAMC,IAAI,GAAGA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,gBAAgB,KAAK;EAEpD,MAAMJ,QAAQ,GAAG,+BAA+B;EAChD,OAAOK,KAAK,CAAE,GAAEL,QAAS,GAAEI,gBAAiB,EAAC,EAAE;IAC9CE,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACR,cAAc,EAAE;IACjB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,QAAQ;MAAEC;IAAM,CAAC;EACzC,CAAC,CAAC,CAACQ,IAAI,CAACC,aAAa,CAAC;AACvB,CAAC;AAAAC,EAAA,GAVMZ,IAAI;AAYX,SAASW,aAAaA,CAACE,GAAG,EAAE;EAC3B,IAAIA,GAAG,CAACC,EAAE,EAAE;IACX,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EAClB;EACA,OAAOF,GAAG,CAACE,IAAI,CAAC,CAAC,CAACL,IAAI,CAACM,GAAG,IAAIC,OAAO,CAACC,MAAM,CAAC;IAAE,GAAGF,GAAG;IAAEG,MAAM,EAAEN,GAAG,CAACM;EAAO,CAAC,CAAC,CAAC;AAC9E;AAEA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAC/B,OAAOhB,KAAK,CAAE,GAAEL,QAAS,GAAEI,gBAAiB,EAAC,EAAE;IAC9CE,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACR,cAAc,EAAE;IACjB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,QAAQ;MAAEC;IAAM,CAAC;EACzC,CAAC,CAAC,CAACQ,IAAI,CAACC,aAAa,CAAC;AACxB,CAAC;AAED,eAAeX,IAAI;AAAA,IAAAY,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}